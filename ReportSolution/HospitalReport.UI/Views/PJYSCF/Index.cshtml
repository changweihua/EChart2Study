@{
    ViewBag.Title = "Index";
}

<h2>平均医生处方金额</h2>

<div style="width: 100%;">
<div style="width: 100%;background-color:lightblue; margin: 2% 0; height: 35px;">
        <div style="float:right;line-height:35px;padding:0 20px;">
            开始时间：<input type="text" class="datepicker" value="@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")" id="dtStart" />
		    结束时间：<input type="text" class="datepicker" value="@DateTime.Now.ToString("yyyy-MM-dd")" id="dtEnd" />
        </div>
    </div>
    <div style="clear: both;">
    </div>
    <div id="main1" class="ec-chart" style="width: 20%; margin: 2% 0; height: 300px;
        float: left;">
    </div>
    <div id="main2" class="ec-chart" style="width: 70%; margin: 2% 0; height: 300px;
        float: left;">
    </div>
    <div style="clear: both;">
    </div>
    <div id="main3" class="ec-chart" style="width: 90%; margin: 2% auto; height: 300px;">
    </div>
</div>

<script>


    // 使用
    require(
            [
                'echarts',
                'echarts/chart/line',
                'echarts/chart/bar',
                'echarts/chart/pie'
            ],
            function (ec) {
                // 基于准备好的dom，初始化echarts图表
                var myChart1 = ec.init(document.getElementById('main1'));
                var myChart2 = ec.init(document.getElementById('main2'));
                var myChart3 = ec.init(document.getElementById('main3'));

                var action1 = function () {
                    doAction('GetData1', myChart1, function (json) {

                        return {
                            title: {
                                text: '项目金额\n\n\n\n',
                                subtext: '    0                  合计             10000',
                                x: 'center',
                                y: 80,
                                textStyle: {
                                    fontSize: '24',
                                    color: 'rgba(255,0,0,1)'
                                }
                            },
                            tooltip: {
                                show: false
                            },
                            series: [{
                                name: '术前住院天数',
                                center: ['50%', '70%'],
                                type: 'pie',
                                radius: ['50%', '70%'],
                                avoidLabelOverlap: false,
                                startAngle: 180,
                                clickable: false,
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: false,
                                            position: 'center'
                                        },
                                        labelLine: {
                                            show: false
                                        }
                                    },
                                    emphasis: {
                                        label: {
                                            show: false
                                        },
                                        labelLine: {
                                            show: false
                                        }
                                    }
                                },
                                data: [{
                                    value: json.data1,
                                    name: '高亮区域',
                                    itemStyle: {
                                        normal: {
                                            label: {
                                                show: true,
                                                formatter: '{c}'
                                            }
                                        },
                                        emphasis: {
                                            label: {
                                                show: true,
                                                formatter: '{c}'
                                            }
                                        }
                                    }
                                }, {
                                    value: json.data2,
                                    name: '阴影区域'
                                }, {
                                    value: json.data3,
                                    name: '透明区域',
                                    itemStyle: {
                                        normal: {
                                            color: 'rgba(0,0,0,0)'
                                        },
                                        emphasis: {
                                            color: 'rgba(0,0,0,0)'
                                        }
                                    }
                                }]
                            }]
                        };

                    });
                };

                var action2 = function () {
                    doAction('GetData2', myChart2, function (json) {

                        var series = [];
                        $(json.series).each(function (index, serie) {
                            series.push({
                                name: serie.name,
                                type: 'bar',
                                data: serie.data,
                                smooth: true,
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true
                                        }
                                    }
                                }
                            });
                        });

                        return {
                            title: {
                                text: '处方金额(万元)',
                                x: 'center'
                            },
                            tooltip: {
                                trigger: 'item'
                            },
                            legend: {
                                data: json.legends,
                                x: 80, borderWidth: 1,
                                y: 30
                            },
                            grid: {
                                borderWidth: 0
                            },
                            calculable: true,
                            xAxis: [{
                                type: 'category',
                                splitLine: {
                                    show: true,
                                    lineStyle: {
                                        type: 'dotted'
                                    }
                                },
                                axisLabel: {
                                    rotate: 45
                                },
                                data: json.categories
                            }],
                            yAxis: [{
                                type: 'value',
                                symbol: 'emptyRectangle',
                                max: 8,
                                min: 0,
                                splitLine: {
                                    show: true,
                                    lineStyle: {
                                        type: 'dotted'
                                    }
                                }
                            }],
                            series: series
                        };

                    });
                };

                var action3 = function () {
                    doAction('GetData2', myChart3, function (json) {

                        var series = [];
                        $(json.series).each(function (index, serie) {
                            series.push({
                                name: serie.name,
                                type: 'bar',
                                data: serie.data,
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true
                                        }
                                    }
                                }
                            });
                        });

                        return {
                            title: {
                                text: '手术例数(科室)',
                                x: 'center'
                            },
                            tooltip: {
                                trigger: 'item'
                            },
                            legend: {
                                data: json.legends,
                                x: 80, borderWidth: 1,
                                y: 30
                            },
                            grid: {
                                borderWidth: 0
                            },
                            calculable: true,
                            xAxis: [{
                                type: 'category',
                                splitLine: {
                                    show: true
                                },
                                axisLabel: {
                                    rotate: 45
                                },
                                data: json.categories
                            }],
                            yAxis: [{
                                type: 'value',
                                max: 8,
                                min: -0,
                                splitLine: {
                                    show: true
                                }
                            }],
                            series: series
                        };

                    });
                };

                loadTask.push(action1, action2, action3);
                invokeTask();

            });
</script>


