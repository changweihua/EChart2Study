@{
    ViewBag.Title = "Index";
}
<h2>
    门诊经济效益</h2>
<div style="width: 100%;">
<div style="width: 100%;background-color:lightblue; margin: 2% 0; height: 35px;">
        <div style="float:right;line-height:35px;padding:0 20px;">
            开始时间：<input type="text" class="datepicker" value="@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")" id="dtStart" />
		    结束时间：<input type="text" class="datepicker" value="@DateTime.Now.ToString("yyyy-MM-dd")" id="dtEnd" />
        </div>
    </div>
    <div style="clear: both;">
    </div>
    <div id="main1" class="ec-chart" style="width: 46%; margin: 2% 0; height: 300px;
        float: left;">
    </div>
    <div id="main2" class="ec-chart" style="width: 46%; margin: 2% 0; height: 300px;
        float: left;">
    </div>
    <div style="clear: both;">
    </div>
    <div id="main3" class="ec-chart" style="width: 46%; margin: 2% 0; height: 300px;
        float: left;">
        <table id="tb" class="table table-bordered table-condensed">
    <thead>
        <tr>
            <th class="datagrid-sortable" style="cursor: pointer;">
                序号
            </th>
            <th>
                统计名称
            </th>
            <th class="datagrid-sortable" style="cursor: pointer;">
                本年门诊量
            </th>
            <th>
                去年门诊楼量
            </th>
            <th class="datagrid-sortable" style="cursor: pointer;">
                增长量
            </th>
            <th>
                增长率
            </th>
        </tr>
    </thead>
    <tbody id="rsbody">
       
    </tbody>
</table>
<div id="Pagination" class="pagination">
    <!-- 这里显示分页 -->
</div>
    </div>
    <div id="main4" class="ec-chart" style="width: 46%; margin: 2% 0; height: 300px;
        float: left;">
    </div>
</div>

<script>
    var $pg = $("#Pagination");
   
    function loadData(url, data) {
        //通过ajax发请求获取数据来修改页面
        $.getJSON(
            url,
            data,
            function (json) {
                $("#rsbody").empty().html($("#trTmpl").render(json.data));
                $pg.pagination(111, opt)
            });
    }

    function pageselectCallback(page_index, pager) {

        // 获取加载元素
        var opt = $.extend(pagerOption, {
            current_page: page_index
        });

        //回调中重新设置分页
        loadData("/MZGZLMX/GetData1", { currentPage: opt.current_page, recordsPerPage: opt.items_per_page });

        //阻止单击事件
        return false;
    }

    //初始化
    var opt = $.extend(pagerOption, {
        callback: pageselectCallback
    });

    loadData("/MZGZLMX/GetData1", { currentPage: 0 });

</script>
<script>





    // 使用
    require(
            [
                'echarts',
                'echarts/chart/line',
                'echarts/chart/gauge',
                'echarts/chart/bar'
            ],
            function (ec) {
                // 基于准备好的dom，初始化echarts图表
                var myChart1 = ec.init(document.getElementById('main1'));
                var myChart2 = ec.init(document.getElementById('main2'));
                var myChart4 = ec.init(document.getElementById('main4'));

                var cseries = [{
                    name: 'centerserie',
                    type: 'gauge',
                    z: 3,
                    min: 0,
                    max: 100,
                    radius: '50%',
                    splitNumber: 5,
                    axisLine: { // 坐标轴线
                        lineStyle: { // 属性lineStyle控制线条样式
                            width: 5
                        }
                    },
                    axisTick: { // 坐标轴小标记
                        length: 15, // 属性length控制线长
                        lineStyle: { // 属性lineStyle控制线条样式
                            color: 'auto'
                        }
                    },
                    splitLine: { // 分隔线
                        length: 20, // 属性length控制线长
                        lineStyle: { // 属性lineStyle（详见lineStyle）控制线条样式
                            color: 'auto'
                        }
                    },
                    title: {
                        offsetCenter: [0, '90%'],
                        textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                            fontWeight: 'bold',
                            fontSize: 20
                        }
                    },
                    detail: {
                        offsetCenter: [0, '30%'], // x, y，单位px
                        textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                            fontSize: '20', fontWeight: 'bold'
                        }
                    },
                    data: []
                }, {
                    name: 'leftserie',
                    type: 'gauge',
                    center: ['20%', '50%'], // 默认全局居中
                    radius: '50%',
                    min: 0,
                    max: 1000,
                    splitNumber: 5,
                    axisLine: { // 坐标轴线
                        lineStyle: { // 属性lineStyle控制线条样式
                            width: 5
                        }
                    },
                    axisTick: { // 坐标轴小标记
                        length: 12, // 属性length控制线长
                        lineStyle: { // 属性lineStyle控制线条样式
                            color: 'auto'
                        }
                    },
                    splitLine: { // 分隔线
                        length: 20, // 属性length控制线长
                        lineStyle: { // 属性lineStyle（详见lineStyle）控制线条样式
                            color: 'auto'
                        }
                    },
                    pointer: {
                        width: 5
                    },
                    title: {
                        offsetCenter: [0, '90%'], // x, y，单位px
                        textStyle: { fontSize: '18', fontWeight: 'bold' }
                    },
                    detail: {
                        offsetCenter: [0, '30%'], // x, y，单位px
                        textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                            fontSize: '18', fontWeight: 'bold'
                        }
                    },
                    data: []
                }, {
                    name: 'rightserie',
                    type: 'gauge',
                    center: ['80%', '50%'], // 默认全局居中
                    radius: '50%',
                    min: 0,
                    max: 1000,
                    splitNumber: 5,
                    axisLine: { // 坐标轴线
                        lineStyle: { // 属性lineStyle控制线条样式
                            width: 5
                        }
                    },
                    axisTick: { // 坐标轴小标记
                        length: 12, // 属性length控制线长
                        lineStyle: { // 属性lineStyle控制线条样式
                            color: 'auto'
                        }
                    },
                    splitLine: { // 分隔线
                        length: 20, // 属性length控制线长
                        lineStyle: { // 属性lineStyle（详见lineStyle）控制线条样式
                            color: 'auto'
                        }
                    },
                    pointer: {
                        width: 5
                    },
                    title: {
                        offsetCenter: [0, '90%'], // x, y，单位px
                        textStyle: { fontSize: '18', fontWeight: 'bold' }
                    },
                    detail: {
                        offsetCenter: [0, '30%'], // x, y，单位px
                        textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                            fontSize: '18', fontWeight: 'bold'
                        }
                    },
                    data: []
                }];


                var action1 = function () {
                    doAction('GetData1', myChart1, function (json) {

                        var series = cseries;
                        var names = ['门诊人均总费用', '门诊人均诊疗费用', '门诊人均药品费用'];
                        series[0].name = names[0];
                        series[1].name = names[1];
                        series[2].name = names[2];
                        console.log(series);
                        $(json.series).each(function (index, serie) {
                            var i = $.inArray(serie.name, names);
                            series[i].data = serie.data;
                            series[i].min = serie.min;
                            series[i].max = serie.max;
                        });

                        return {
                            tooltip: {
                                formatter: "{a} <br/>{c}"
                            },
                            title: {
                                text: '门诊人次费用统计',
                                x: 'left'
                            },
                            series: series
                        };

                    });
                };


                var action2 = function () {
                    doAction('GetData2', myChart2, function (json) {

                        var series = [];
                        $(json.series).each(function (index, serie) {
                            series.push({
                                name: serie.name,
                                type: 'bar',
                                data: serie.data,
                                smooth: true,
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true
                                        }
                                    }
                                }
                            });
                        });

                        return {
                            title: {
                                text: '期内入院人数'
                            },
                            tooltip: {
                                trigger: 'item'
                            },
                            legend: {
                                data: json.legends
                            },
                            grid: {
                                borderWidth: 0
                            },
                            calculable: false,
                            xAxis: [{
                                type: 'category',
                                splitLine: {
                                    show: false,
                                    lineStyle: {
                                        type: 'dotted'
                                    }
                                },
                                axisLabel: {
                                    rotate: 45
                                },
                                data: json.categories
                            }],
                            yAxis: [{
                                type: 'value',
                                symbol: 'emptyRectangle',
                                max: 205,
                                min: 0,
                                splitLine: {
                                    show: false,
                                    lineStyle: {
                                        type: 'dotted'
                                    }
                                }
                            }],
                            series: series
                        };

                    });
                };


                var action4 = function () {
                    doAction('GetData4', myChart4, function (json) {
                        var series = [];
                        $(json.series).each(function (index, serie) {
                            series.push({
                                name: serie.name,
                                type: 'bar',
                                data: serie.data,
                                smooth: true,
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true
                                        }
                                    }
                                }
                            });
                        });

                        return {
                            title: {
                                text: '期内入院人数'
                            },
                            tooltip: {
                                trigger: 'item'
                            },
                            legend: {
                                data: json.legends
                            },
                            grid: {
                                borderWidth: 0
                            },
                            calculable: false,
                            xAxis: [{
                                type: 'category',
                                splitLine: {
                                    show: false,
                                    lineStyle: {
                                        type: 'dotted'
                                    }
                                },
                                axisLabel: {
                                    rotate: 45
                                },
                                data: json.categories
                            }],
                            yAxis: [{
                                type: 'value',
                                symbol: 'emptyRectangle',
                                max: 14700,
                                min: 0,
                                splitLine: {
                                    show: false,
                                    lineStyle: {
                                        type: 'dotted'
                                    }
                                }
                            }],
                            series: series
                        };

                    });
                };

                loadTask.push(action1, action2, action4);
                invokeTask();

            });
</script>
