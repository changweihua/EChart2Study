@{
    ViewBag.Title = "Index";
}

<h2>
    病区工作量</h2>
<div style="width: 100%;">
    <div style="width: 100%;background-color:lightblue; margin: 2% 0; height: 35px;">
        <div style="float:right;line-height:35px;padding:0 20px;">
            查询科室：<select><option>所有科室</option></select>
            开始时间：<input type="text" class="datepicker" value="@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")" id="dtStart" />
		    结束时间：<input type="text" class="datepicker" value="@DateTime.Now.ToString("yyyy-MM-dd")" id="dtEnd" />
        </div>
    </div>
    <div style="clear: both;">
    </div>
    <div id="main1" class="ec-chart" style="width: 46%; margin: 2% 0; height: 300px;
        float: left;">
    </div>
    <div id="main2" class="ec-chart" style="width: 46%; margin: 2% 0; height: 300px;
        float: left;">
    </div>
    <div style="clear: both;">
    </div>
    <div id="main3" class="ec-chart" style="width: 92%; margin: 2% auto; height: 300px;">
    </div>
    
</div>
<script>





    // 使用
    require(
            [
                'echarts',
                'echarts/chart/line',
                'echarts/chart/pie',
                'echarts/chart/gauge'
            ],
            function (ec) {
                // 基于准备好的dom，初始化echarts图表
                var myChart1 = ec.init(document.getElementById('main1'));
                var myChart2 = ec.init(document.getElementById('main2'));
                var myChart3 = ec.init(document.getElementById('main3'));

                var cseries = [{
                    name: 'centerserie',
                    type: 'gauge',
                    z: 3,
                    min: 0,
                    max: 100,
                    radius: '60%',
                    splitNumber: 5,
                    axisLine: { // 坐标轴线
                        lineStyle: { // 属性lineStyle控制线条样式
                            width: 5
                        }
                    },
                    axisTick: { // 坐标轴小标记
                        length: 15, // 属性length控制线长
                        lineStyle: { // 属性lineStyle控制线条样式
                            color: 'auto'
                        }
                    },
                    splitLine: { // 分隔线
                        length: 20, // 属性length控制线长
                        lineStyle: { // 属性lineStyle（详见lineStyle）控制线条样式
                            color: 'auto'
                        }
                    },
                    title: {
                        offsetCenter: [0, '80%'],
                        textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                            fontWeight: 'bold',
                            fontSize: 20
                        }
                    },
                    detail: {
                        offsetCenter: [0, '30%'], // x, y，单位px
                        textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                            fontSize: '20', fontWeight: 'bold'
                        }
                    },
                    data: []
                }, {
                    name: 'leftserie',
                    type: 'gauge',
                    center: ['20%', '55%'], // 默认全局居中
                    radius: '40%',
                    min: 0,
                    max: 1000,
                    splitNumber: 5,
                    axisLine: { // 坐标轴线
                        lineStyle: { // 属性lineStyle控制线条样式
                            width: 5
                        }
                    },
                    axisTick: { // 坐标轴小标记
                        length: 12, // 属性length控制线长
                        lineStyle: { // 属性lineStyle控制线条样式
                            color: 'auto'
                        }
                    },
                    splitLine: { // 分隔线
                        length: 20, // 属性length控制线长
                        lineStyle: { // 属性lineStyle（详见lineStyle）控制线条样式
                            color: 'auto'
                        }
                    },
                    pointer: {
                        width: 5
                    },
                    title: {
                        offsetCenter: [0, '90%'], // x, y，单位px
                        textStyle: { fontSize: '18', fontWeight: 'bold' }
                    },
                    detail: {
                        offsetCenter: [0, '30%'], // x, y，单位px
                        textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                            fontSize: '18', fontWeight: 'bold'
                        }
                    },
                    data: []
                }, {
                    name: 'rightserie',
                    type: 'gauge',
                    center: ['80%', '55%'], // 默认全局居中
                    radius: '40%',
                    min: 0,
                    max: 1000,
                    splitNumber: 5,
                    axisLine: { // 坐标轴线
                        lineStyle: { // 属性lineStyle控制线条样式
                            width: 5
                        }
                    },
                    axisTick: { // 坐标轴小标记
                        length: 12, // 属性length控制线长
                        lineStyle: { // 属性lineStyle控制线条样式
                            color: 'auto'
                        }
                    },
                    splitLine: { // 分隔线
                        length: 20, // 属性length控制线长
                        lineStyle: { // 属性lineStyle（详见lineStyle）控制线条样式
                            color: 'auto'
                        }
                    },
                    pointer: {
                        width: 5
                    },
                    title: {
                        offsetCenter: [0, '90%'], // x, y，单位px
                        textStyle: { fontSize: '18', fontWeight: 'bold' }
                    },
                    detail: {
                        offsetCenter: [0, '30%'], // x, y，单位px
                        textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                            fontSize: '18', fontWeight: 'bold'
                        }
                    },
                    data: []
                }];

                var action1 = function () {
                    doAction('GetData1', myChart1, function (json) {

                        var series = cseries;
                        var names = ['平均床位使用率', '平均开放床位数', '平均使用床位数'];
                        series[0].name = names[0];
                        series[1].name = names[1];
                        series[2].name = names[2];

                        $(json.series).each(function (index, serie) {
                            var i = $.inArray(serie.name, names);
                            series[i].data = serie.data;
                            series[i].min = serie.min;
                            series[i].max = serie.max;
                        });

                        return {
                            tooltip: {
                                formatter: "{a} <br/>{c}"
                            },
                            title: {
                                text: '床位使用率',
                                x: 'left'
                            },
                            series: series
                        };

                    });
                };


                var action2 = function () {
                    doAction('GetData2', myChart2, function (json) {
                        return {
                            title: {
                                text: '出入院人数',
                                x: 'left'
                            },
                            tooltip: {
                                trigger: 'item',
                                formatter: "{a} <br/>{b} : {c} ({d}%)"
                            },
                            legend: {
                                orient: 'vertical',
                                x: 'right',
                                y: 'center',
                                data: json.legends,
                                formatter: function (name) {
                                    var index = $.inArray(name, json.legends);
                                    return name + json.data[index].value + ' 人';
                                }
                            },
                            series: [{
                                name: '出入院人数',
                                type: 'pie',
                                radius: '55%',
                                center: ['50%', '60%'],
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true,
                                            formatter: '{a}: {d}%'
                                        },
                                        labelLine: {
                                            show: true
                                        }
                                    },
                                    emphasis: {
                                        label: {
                                            show: false
                                        },
                                        labelLine: {
                                            show: false
                                        }
                                    }
                                },
                                data: json.data
                            }]
                        };

                    });
                };


                var action3 = function () {
                    doAction('GetData3', myChart3, function (json) {

                        var series = [];
                        $(json.series).each(function (index, serie) {
                            series.push({
                                name: serie.name,
                                type: 'line',
                                data: serie.data,
                                smooth: true,
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true
                                        }
                                    }
                                },
                                markLine: {
                                    data: [{
                                        type: 'average',
                                        name: '平均值'
                                    }]
                                }
                            });
                        });

                        return {
                            title: {
                                text: '在院病人趋势'
                            },
                            tooltip: {
                                trigger: 'item'
                            },
                            legend: {
                                data: json.legends
                            },
                            grid: {
                                borderWidth: 0
                            },
                            calculable: true,
                            xAxis: [{
                                type: 'category',
                                boundaryGap: false,
                                splitLine: {
                                    show: false
                                },

                                axisLabel: {
                                    rotate: 45
                                },
                                data: json.categories
                            }],
                            yAxis: [{
                                type: 'value',
                                splitLine: {
                                    show: false
                                }
                            }],
                            series: series
                        };

                    });
                };

                loadTask.push(action1, action2, action3);
                invokeTask();

            });
</script>




